#!/bin/bash

json_input='{"location": {"city": "New York", "people": [{"name": "John", "age": 30}, {"name": "Alice", "age": 25}]}}'
nested_node='location.people'
csv_file='output.csv'

# Remove content of existing CSV file
> "$csv_file"

# Python script to flatten nested JSON array to CSV
python3 - <<END >> "$csv_file"
import json
import csv

# Recursive function to navigate nested nodes
def get_nested_node(data, keys):
    for key in keys:
        data = data.get(key, {})
    return data

# JSON input
json_input = '$json_input'
nested_node = '$nested_node'

# Load JSON
data = json.loads(json_input)

# Get the nested array node using the recursive function
nested_array = get_nested_node(data, nested_node.split('.'))

# Open CSV file in append mode
with open("$csv_file", 'a', newline='') as csvfile:
    csv_writer = csv.writer(csvfile)

    # Write header
    header_written = False

    # Loop through array elements
    for entry in nested_array:
        # Flatten JSON entry
        flattened_data = {key: entry[key] for key in entry.keys()}

        # Write header if not already written
        if not header_written:
            csv_writer.writerow(flattened_data.keys())
            header_written = True

        # Write flattened data
        csv_writer.writerow(flattened_data.values())
END
