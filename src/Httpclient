 import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

import java.io.IOException;

public class ApacheHttpClientWithProxyExample {
    public static void main(String[] args) {
        try {
            // Replace with your API endpoint
            String url = "https://your-api-endpoint.com/endpoint";
            // Replace with your actual bearer token
            String token = "your_bearer_token";

            // JSON payload
            String json = "{\"key1\":\"value1\", \"key2\":\"value2\"}";

            // Proxy settings
            String proxyHost = "your.proxy.host";
            int proxyPort = 8080; // Replace with your proxy port

            // Create request configuration with proxy
            RequestConfig config = RequestConfig.custom()
                    .setProxy(new HttpHost(proxyHost, proxyPort))
                    .build();

            // Create an HttpClient with request configuration
            HttpClient client = HttpClients.custom()
                    .setDefaultRequestConfig(config)
                    .build();

            // Create an HttpPost with the URL
            HttpPost httpPost = new HttpPost(url);

            // Set headers
            httpPost.setHeader("Content-Type", "application/json");
            httpPost.setHeader("Authorization", "Bearer " + token);

            // Set JSON payload
            StringEntity entity = new StringEntity(json, ContentType.APPLICATION_JSON);
            httpPost.setEntity(entity);

            // Execute the request
            HttpResponse response = client.execute(httpPost);

            // Get the response entity
            HttpEntity responseEntity = response.getEntity();

            // Convert response entity to string
            String responseBody = EntityUtils.toString(responseEntity);

            // Print the response status code and body
            System.out.println("Status code: " + response.getStatusLine().getStatusCode());
            System.out.println("Response body: " + responseBody);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
